plugins {
    id 'de.dfki.mary.voicebuilding-festvox' version '5.5-SNAPSHOT'
    id 'de.dfki.mary.voicebuilding-legacy' version '5.5-SNAPSHOT'
}

group 'de.dfki.mary'
version '5.3-SNAPSHOT'

marytts {
    voice {
        name = 'ac-nsh'
        language = 'ru'
        region = 'RU'
        gender = 'male'
        type = 'unit selection'
        description = 'A male Russian unit selection voice'
        license {
            name = 'Creative Commons Attribution-ShareAlike 3.0 Unported'
            shortName = 'CC-BY-SA'
            url = 'http://mary.dfki.de/download/by-sa-3.0.html'
        }
        samplingRate = 16000
    }
}

repositories {
    ivy {
        url 'http://alphacephei.com/tts'
        allowInsecureProtocol = true
        patternLayout {
            artifact '[artifact]-[revision].[ext]'
        }
        metadataSources {
            artifact()
        }
    }
}

dependencies {
    data group: 'com.alphacephei', name: 'ac_ru_nsh_clunits', version: '0.6', ext: 'tar.bz2'
}

def mapping = [
    'pau' : '_',
    'ssil': '_',
]

task simpleLab(type: Copy) {
    from processDataResources
    into "$project.buildDir/lab"
    include '*.lab'
    filter {
        def label = it.trim().split(/\s+/, 3).last()
        it.trim().replaceAll(label) {
            mapping[it] ?: it
        }
    }
}

task simpleText {
    dependsOn processDataResources
    def out_dir = new File("$project.buildDir/text")
    ext.dest_dir = out_dir
    outputs.dir(out_dir)

    doLast {
        out_dir.mkdirs()
        println("$processDataResources.destinationDir/txt.done.data")
        (new File("$processDataResources.destinationDir/txt.done.data")).eachLine { line ->
            def elts = line.split(' "')
            def filename = elts[0].replace(/( /, "") + ".txt"
            println(filename)
            (new File("$out_dir/$filename")).text = elts[1].replace(/" )/, "")
        }
    }
}

basenames {
    dependsOn wav, simpleLab, simpleText
    include '*'
}
